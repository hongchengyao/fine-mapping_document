{
    "docs": [
        {
            "location": "/", 
            "text": "Introduction\n\n\n\n\nGeneral process of GWAS fine-mapping\n\n\nData preprocessing\n\n\nUsually this step is complex and time consuming, and this tutorial will \nfocus on this step\n  \n\n\nPAINTOR\n\n\n\n\nFile formatting  \n\n\nFile splitting  \n\n\nLD matrix generation  \n\n\nFunctional annotation matrix generation  \n\n\n\n\nfgwas\n\n\n\n\nFile formatting\n\n\nFile splitting\n\n\nThe AnnotateLocus.py of PAINTOR is applied to SNPs from the same chromosome, so you either split the GWAS file into chromosomes or split it into loci in order to use AnnotateLocus.py to generate functional annotation matrix\n\n\nAlthough fgwas does not require LD matrix file, it's still necessary to define loci and assign SEGNUMBER to each locus\n\n\n\n\n\n\nFunctional annotation matrix generation\n\n\n\n\nSoftware running\n\n\nAfter the preprocessing, running fine-mapping software is usually straightforward\n\n\n\n\nSpecify parameters for different softwares", 
            "title": "Introduction"
        }, 
        {
            "location": "/#introduction", 
            "text": "", 
            "title": "Introduction"
        }, 
        {
            "location": "/#general-process-of-gwas-fine-mapping", 
            "text": "", 
            "title": "General process of GWAS fine-mapping"
        }, 
        {
            "location": "/#data-preprocessing", 
            "text": "Usually this step is complex and time consuming, and this tutorial will  focus on this step", 
            "title": "Data preprocessing"
        }, 
        {
            "location": "/#paintor", 
            "text": "File formatting    File splitting    LD matrix generation    Functional annotation matrix generation", 
            "title": "PAINTOR"
        }, 
        {
            "location": "/#fgwas", 
            "text": "File formatting  File splitting  The AnnotateLocus.py of PAINTOR is applied to SNPs from the same chromosome, so you either split the GWAS file into chromosomes or split it into loci in order to use AnnotateLocus.py to generate functional annotation matrix  Although fgwas does not require LD matrix file, it's still necessary to define loci and assign SEGNUMBER to each locus    Functional annotation matrix generation", 
            "title": "fgwas"
        }, 
        {
            "location": "/#software-running", 
            "text": "After the preprocessing, running fine-mapping software is usually straightforward   Specify parameters for different softwares", 
            "title": "Software running"
        }, 
        {
            "location": "/preprocessing/file_format/", 
            "text": "File formatting\n\n\nPAINTOR\n\n\n\n\nInput requirement\n\n\n\n\nLocus file (contain Zscore)\n\n\nLD matrix file\n\n\nAnnotation matrix file\n\n\n\n\nFor locus file, first line must be the header, only Zscore is required, other information could also be added.\n\nFor LD matrix file, if you have the raw genotype data, you can generate the LD matrix yourself, but if you don't, you can use the 1000 Genome data as the reference and use the script provided by PAINTOR to generate the LD matrix\n\nNote: Snps in the locus file must be in the same order as in the LD matrix file and the annotation matrix file\n\n\nIf finemapping alone\n\n\n\n\n\n\n\n\nHeader\n\n\nOption\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nZscore\n\n\nrequired\n\n\n\n\n\n\n\n\n\n\nIf using 1000G reference to generate LD matrix (most common case)\n\n\n\n\n\n\n\n\nHeader\n\n\nOption\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nchr\n\n\nrequired\n\n\n\n\n\n\n\n\npos\n\n\nrequired\n\n\n\n\n\n\n\n\neffective allele\n\n\nrequired\n\n\n\n\n\n\n\n\nbaseline allele\n\n\nrequired\n\n\n\n\n\n\n\n\nZscore\n\n\nrequired\n\n\n\n\n\n\n\n\n\n\nfgwas\n\n\n\n\nInput requirement\n\n\n\n\nOnly one file containing both Zscore and functional annotation\n\n\n\n\nfgwas does \nNOT\n require a LD matrix file, but it require the Zscore and the annotations to be incorporated into \nONE\n file. And all loci should be merged into \nONE\n file and identified by a SEGNUMBER column.\n\n\nIn addition, it has different input requirement for quantitative trait and case-control trait  \n\n\nQuantitative trait\n\n\nThe columns have no enforced order, but are identified from the header  \n\n\nType 1\n\n\n\n\n\n\n\n\nHeader\n\n\nOption\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nSNPID\n\n\nrequired\n\n\n\n\n\n\n\n\nCHR\n\n\nrequired\n\n\n\n\n\n\n\n\nPOS\n\n\nrequired\n\n\n\n\n\n\n\n\nF\n\n\nrequired\n\n\nallele frequency of one of the alleles of the SNP\n\n\n\n\n\n\nZ\n\n\nrequired\n\n\nZscore\n\n\n\n\n\n\nN\n\n\nrequired\n\n\nsample size\n\n\n\n\n\n\nSEGNUMBER\n\n\nrequired\n\n\neach locus should have a unique SEGNUMBER, and the file should be ordered accordingly\n\n\n\n\n\n\nannotation1\n\n\noptional\n\n\n\n\n\n\n\n\nannotation2\n\n\noptional\n\n\n\n\n\n\n\n\n...\n\n\n\n\n\n\n\n\n\n\n\n\nType 2\n\n\n\n\n\n\n\n\nHeader\n\n\nOption\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nSNPID\n\n\nrequired\n\n\n\n\n\n\n\n\nCHR\n\n\nrequired\n\n\n\n\n\n\n\n\nPOS\n\n\nrequired\n\n\n\n\n\n\n\n\nF\n\n\nrequired but not used\n\n\nallele frequency of one of the alleles of the SNP\n\n\n\n\n\n\nZ\n\n\nrequired\n\n\nZscore\n\n\n\n\n\n\nN\n\n\nrequired but not used\n\n\nsample size\n\n\n\n\n\n\nSE\n\n\nrequired\n\n\nstandard error\n\n\n\n\n\n\nSEGNUMBER\n\n\nrequired\n\n\neach locus should have a unique SEGNUMBER, and the file should be ordered accordingly\n\n\n\n\n\n\nannotation1\n\n\noptional\n\n\n\n\n\n\n\n\nannotation2\n\n\noptional\n\n\n\n\n\n\n\n\n...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\nfor type 2, even though input SE will override F and N, you still need to add these two columns otherwise the program will raise an error. If you do not have the real value of F and N, you can add some pseudo values since they will not be used\n\n\n\n\nCase/control studies\n\n\nType 1\n\n\n\n\n\n\n\n\nHeader\n\n\nOption\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nSNPID\n\n\nrequired\n\n\n\n\n\n\n\n\nCHR\n\n\nrequired\n\n\n\n\n\n\n\n\nPOS\n\n\nrequired\n\n\n\n\n\n\n\n\nF\n\n\nrequired\n\n\nallele frequency of one of the alleles of the SNP\n\n\n\n\n\n\nZ\n\n\nrequired\n\n\nZscore\n\n\n\n\n\n\nNCASE\n\n\nrequired\n\n\nnumber of cases used in the association study at this SNP\n\n\n\n\n\n\nNCONTROL\n\n\nrequired\n\n\nnumber of controls used in the association study at this SNP\n\n\n\n\n\n\nSEGNUMBER\n\n\nrequired\n\n\neach locus should have a unique SEGNUMBER, and the file should be ordered according to this column\n\n\n\n\n\n\nannotation1\n\n\noptional\n\n\n\n\n\n\n\n\nannotation2\n\n\noptional\n\n\n\n\n\n\n\n\n...\n\n\n\n\n\n\n\n\n\n\n\n\nType 2\n\n\n\n\n\n\n\n\nHeader\n\n\nOption\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nSNPID\n\n\nrequired\n\n\n\n\n\n\n\n\nCHR\n\n\nrequired\n\n\n\n\n\n\n\n\nPOS\n\n\nrequired\n\n\n\n\n\n\n\n\nF\n\n\nrequired but not used\n\n\nallele frequency of one of the alleles of the SNP\n\n\n\n\n\n\nZ\n\n\nrequired\n\n\nZscore\n\n\n\n\n\n\nNCASE\n\n\nrequired but not used\n\n\nnumber of cases used in the association study at this SNP\n\n\n\n\n\n\nNCONTROL\n\n\nrequired but not used\n\n\nnumber of controls used in the association study at this SNP\n\n\n\n\n\n\nSE\n\n\nrequired\n\n\nstandard error\n\n\n\n\n\n\nSEGNUMBER\n\n\nrequired\n\n\neach locus should have a unique SEGNUMBER, and the file should be ordered according to this column\n\n\n\n\n\n\nannotation1\n\n\noptional\n\n\n\n\n\n\n\n\nannotation2\n\n\noptional\n\n\n\n\n\n\n\n\n...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\nFor type 2, even though input SE will override F and NCASE and NCONTROL, you still need to add these two columns otherwise the program will raise an error. If you do not have the real value of F and N, you can add some pseudo values since they will not be used\n\n\n\n\nCAVIAR\n\n\n\n\nto be added\n\n\nCAVIARBF\n\n\n\n\nto be added", 
            "title": "1. File formatting"
        }, 
        {
            "location": "/preprocessing/file_format/#file-formatting", 
            "text": "", 
            "title": "File formatting"
        }, 
        {
            "location": "/preprocessing/file_format/#paintor", 
            "text": "", 
            "title": "PAINTOR"
        }, 
        {
            "location": "/preprocessing/file_format/#input-requirement", 
            "text": "Locus file (contain Zscore)  LD matrix file  Annotation matrix file   For locus file, first line must be the header, only Zscore is required, other information could also be added. \nFor LD matrix file, if you have the raw genotype data, you can generate the LD matrix yourself, but if you don't, you can use the 1000 Genome data as the reference and use the script provided by PAINTOR to generate the LD matrix \nNote: Snps in the locus file must be in the same order as in the LD matrix file and the annotation matrix file", 
            "title": "Input requirement"
        }, 
        {
            "location": "/preprocessing/file_format/#if-finemapping-alone", 
            "text": "Header  Option  Note      Zscore  required", 
            "title": "If finemapping alone"
        }, 
        {
            "location": "/preprocessing/file_format/#if-using-1000g-reference-to-generate-ld-matrix-most-common-case", 
            "text": "Header  Option  Note      chr  required     pos  required     effective allele  required     baseline allele  required     Zscore  required", 
            "title": "If using 1000G reference to generate LD matrix (most common case)"
        }, 
        {
            "location": "/preprocessing/file_format/#fgwas", 
            "text": "", 
            "title": "fgwas"
        }, 
        {
            "location": "/preprocessing/file_format/#input-requirement_1", 
            "text": "Only one file containing both Zscore and functional annotation   fgwas does  NOT  require a LD matrix file, but it require the Zscore and the annotations to be incorporated into  ONE  file. And all loci should be merged into  ONE  file and identified by a SEGNUMBER column.  In addition, it has different input requirement for quantitative trait and case-control trait", 
            "title": "Input requirement"
        }, 
        {
            "location": "/preprocessing/file_format/#quantitative-trait", 
            "text": "The columns have no enforced order, but are identified from the header", 
            "title": "Quantitative trait"
        }, 
        {
            "location": "/preprocessing/file_format/#type-1", 
            "text": "Header  Option  Note      SNPID  required     CHR  required     POS  required     F  required  allele frequency of one of the alleles of the SNP    Z  required  Zscore    N  required  sample size    SEGNUMBER  required  each locus should have a unique SEGNUMBER, and the file should be ordered accordingly    annotation1  optional     annotation2  optional     ...", 
            "title": "Type 1"
        }, 
        {
            "location": "/preprocessing/file_format/#type-2", 
            "text": "Header  Option  Note      SNPID  required     CHR  required     POS  required     F  required but not used  allele frequency of one of the alleles of the SNP    Z  required  Zscore    N  required but not used  sample size    SE  required  standard error    SEGNUMBER  required  each locus should have a unique SEGNUMBER, and the file should be ordered accordingly    annotation1  optional     annotation2  optional     ...        Warning  for type 2, even though input SE will override F and N, you still need to add these two columns otherwise the program will raise an error. If you do not have the real value of F and N, you can add some pseudo values since they will not be used", 
            "title": "Type 2"
        }, 
        {
            "location": "/preprocessing/file_format/#casecontrol-studies", 
            "text": "", 
            "title": "Case/control studies"
        }, 
        {
            "location": "/preprocessing/file_format/#type-1_1", 
            "text": "Header  Option  Note      SNPID  required     CHR  required     POS  required     F  required  allele frequency of one of the alleles of the SNP    Z  required  Zscore    NCASE  required  number of cases used in the association study at this SNP    NCONTROL  required  number of controls used in the association study at this SNP    SEGNUMBER  required  each locus should have a unique SEGNUMBER, and the file should be ordered according to this column    annotation1  optional     annotation2  optional     ...", 
            "title": "Type 1"
        }, 
        {
            "location": "/preprocessing/file_format/#type-2_1", 
            "text": "Header  Option  Note      SNPID  required     CHR  required     POS  required     F  required but not used  allele frequency of one of the alleles of the SNP    Z  required  Zscore    NCASE  required but not used  number of cases used in the association study at this SNP    NCONTROL  required but not used  number of controls used in the association study at this SNP    SE  required  standard error    SEGNUMBER  required  each locus should have a unique SEGNUMBER, and the file should be ordered according to this column    annotation1  optional     annotation2  optional     ...        Warning  For type 2, even though input SE will override F and NCASE and NCONTROL, you still need to add these two columns otherwise the program will raise an error. If you do not have the real value of F and N, you can add some pseudo values since they will not be used", 
            "title": "Type 2"
        }, 
        {
            "location": "/preprocessing/file_format/#caviar", 
            "text": "to be added", 
            "title": "CAVIAR"
        }, 
        {
            "location": "/preprocessing/file_format/#caviarbf", 
            "text": "to be added", 
            "title": "CAVIARBF"
        }, 
        {
            "location": "/preprocessing/file_split/", 
            "text": "File splitting\n\n\n\n\nThe idea of file splitting is to split the whole genome into loci. There are several ways to split the genome, and here the systematic way is to use the \napproximately independent LD block\n.  \n\n\nApproximately independent LD block\n\n\n\n\nRead the range of each LD block from the approximately independent LD block file with \nmatched population\n\n\nUse tabix to extract the SNPs from the GWAS file according to the LD block range\n\n\nFilter loci by Pvalue/Zscore since there are \nthousands\n of LD blocks  \n\n\n\n\nExample LD block file\n\n\nchr start stop\nchr1 10583 1892607\nchr1 1892607 3582736\nchr1 3582736 4380811\nchr1 4380811 5913893\n...\n\n\n\nExample code\n\n\n\n\nNote\n\n\nThis should not be used directly since it applies to specific files\n\n\n\n\n# comrepss the file using bgzip\nbgzip gwas_summary_temp_sorted\n# make index file using tabix\ntabix -s 1 -b 2 -e 2 -S 1 gwas_summary_temp_sorted.gz\n# extract range of LD block\ncat fourier_ls-all.bed | while read line\ndo\n    array=(${line})\n    chrnum=${array[0]#*chr}\n    chrnum=${chrnum// /}\n    start=${array[1]// /}\n    end=${array[2]// /}\n    if [ \n${start}\n != \nstart\n ]; then\n    # use tabix to extract the LD block from the GWAS file\n    tabix gwas_summary_temp_sorted.gz ${chrnum}:${start}-${end} \n output.${chrnum}_${start}_${end}\ndone\n\n\n\n\nOther methods\n\n\nIt is not necessary to split the genome into loci by approximately independent LD block. Sometimes people may just select the lead SNP and include SNPs within 500K bp of the lead SNP on both sides. If you have already define the loci somehow, it's OK to just skip this step.", 
            "title": "2. File splitting"
        }, 
        {
            "location": "/preprocessing/file_split/#file-splitting", 
            "text": "The idea of file splitting is to split the whole genome into loci. There are several ways to split the genome, and here the systematic way is to use the  approximately independent LD block .", 
            "title": "File splitting"
        }, 
        {
            "location": "/preprocessing/file_split/#approximately-independent-ld-block", 
            "text": "Read the range of each LD block from the approximately independent LD block file with  matched population  Use tabix to extract the SNPs from the GWAS file according to the LD block range  Filter loci by Pvalue/Zscore since there are  thousands  of LD blocks", 
            "title": "Approximately independent LD block"
        }, 
        {
            "location": "/preprocessing/file_split/#example-ld-block-file", 
            "text": "chr start stop\nchr1 10583 1892607\nchr1 1892607 3582736\nchr1 3582736 4380811\nchr1 4380811 5913893\n...", 
            "title": "Example LD block file"
        }, 
        {
            "location": "/preprocessing/file_split/#example-code", 
            "text": "Note  This should not be used directly since it applies to specific files   # comrepss the file using bgzip\nbgzip gwas_summary_temp_sorted\n# make index file using tabix\ntabix -s 1 -b 2 -e 2 -S 1 gwas_summary_temp_sorted.gz\n# extract range of LD block\ncat fourier_ls-all.bed | while read line\ndo\n    array=(${line})\n    chrnum=${array[0]#*chr}\n    chrnum=${chrnum// /}\n    start=${array[1]// /}\n    end=${array[2]// /}\n    if [  ${start}  !=  start  ]; then\n    # use tabix to extract the LD block from the GWAS file\n    tabix gwas_summary_temp_sorted.gz ${chrnum}:${start}-${end}   output.${chrnum}_${start}_${end}\ndone", 
            "title": "Example code"
        }, 
        {
            "location": "/preprocessing/file_split/#other-methods", 
            "text": "It is not necessary to split the genome into loci by approximately independent LD block. Sometimes people may just select the lead SNP and include SNPs within 500K bp of the lead SNP on both sides. If you have already define the loci somehow, it's OK to just skip this step.", 
            "title": "Other methods"
        }, 
        {
            "location": "/preprocessing/ld_matrix_generation/", 
            "text": "LD matrix generation\n\n\n\n\n\n\nNote\n\n\nSnps in the fine-mapping file should be in the same order as in the LD matrix file\n\n\n\n\nLD matrix generation using PAINTOR script\n\n\n\n\n\n\n\n\n\n\nHeader\n\n\nOption\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nchr\n\n\nrequired\n\n\nUsed to choose the reference file\n\n\n\n\n\n\npos\n\n\nrequired\n\n\n\n\n\n\n\n\neffective allele\n\n\nrequired\n\n\n\n\n\n\n\n\nbaseline allele\n\n\nrequired\n\n\n\n\n\n\n\n\nZscore\n\n\nrequired\n\n\n\n\n\n\n\n\n1000g reference\n\n\nrequired\n\n\n\n\n\n\n\n\n1000g panel file\n\n\nrequired\n\n\n\n\n\n\n\n\npopulation ethnicity\n\n\nrequired\n\n\n\n\n\n\n\n\n\n\nUsually 1000 genome reference file are splitted into chromosomes, and CalcLD_1KG_VCF.py need to specify reference with matched chromosome\n\n\nExample code\n\n\n\n\nNote\n\n\nThis should not be used directly since it applies to specific files\n\n\n\n\n    python CalcLD_1KG_VCF.py\n    --locus gwas_summary_3_4750808.processed\n    --reference ALL.chr3.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz\n    --map integrated_call_samples_v3.20130502.ALL.panel\n    --effect_allele effect_allele\n    --alt_allele baseline_allele\n    --population EAS\n    --Zhead Zscore\n    --out_name gwas_summary_3_4750808.processed\n    --position pos\n\n\n\n\nLD matrix generation using raw genotype data and Plink\n\n\nto be added", 
            "title": "3. LD matrix generation"
        }, 
        {
            "location": "/preprocessing/ld_matrix_generation/#ld-matrix-generation", 
            "text": "Note  Snps in the fine-mapping file should be in the same order as in the LD matrix file", 
            "title": "LD matrix generation"
        }, 
        {
            "location": "/preprocessing/ld_matrix_generation/#ld-matrix-generation-using-paintor-script", 
            "text": "Header  Option  Note      chr  required  Used to choose the reference file    pos  required     effective allele  required     baseline allele  required     Zscore  required     1000g reference  required     1000g panel file  required     population ethnicity  required      Usually 1000 genome reference file are splitted into chromosomes, and CalcLD_1KG_VCF.py need to specify reference with matched chromosome", 
            "title": "LD matrix generation using PAINTOR script"
        }, 
        {
            "location": "/preprocessing/ld_matrix_generation/#example-code", 
            "text": "Note  This should not be used directly since it applies to specific files       python CalcLD_1KG_VCF.py\n    --locus gwas_summary_3_4750808.processed\n    --reference ALL.chr3.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz\n    --map integrated_call_samples_v3.20130502.ALL.panel\n    --effect_allele effect_allele\n    --alt_allele baseline_allele\n    --population EAS\n    --Zhead Zscore\n    --out_name gwas_summary_3_4750808.processed\n    --position pos", 
            "title": "Example code"
        }, 
        {
            "location": "/preprocessing/ld_matrix_generation/#ld-matrix-generation-using-raw-genotype-data-and-plink", 
            "text": "to be added", 
            "title": "LD matrix generation using raw genotype data and Plink"
        }, 
        {
            "location": "/preprocessing/functional_annotation_generation/", 
            "text": "Functional annotation generation\n\n\n\n\nThe generation of functional annotation matrix relies on two types of information (files)\n\n\n\n\nThe functional annotation bed files\n\n\nThe chromosome and position information of each SNP from GWAS summary data file\n\n\n\n\nIf using PAINTOR script to generate functional annotation matrix\n\n\n\n\n\n\n\n\nHeader\n\n\nOption\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nchr\n\n\nrequired\n\n\n\n\n\n\n\n\npos\n\n\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nMake sure that the functional annotation bed file are sorted, because the AnnotateLocus.py script used a specific algorithm and unsorted functional annotation bed file will lead to wrong function annotation matrix.\n\n\nMake sure that the chromosome nomenclature is the same in the GWAS file and the functional annotation bed file. e.g. both should be chr1 or both should be 1\n\n\n\n\n\n\nExample code\n\n\n\n\nNote\n\n\nThis should not be used directly since it applies to specific files\n\n\n\n\n    python AnnotateLocus.py\n    --input annotation_paths_list\n    --locus gwas_summary_3_4750808.processed\n    --out gwas_summary_3_4750808.processed.annotations\n    --chr chr\n    --pos pos\n\n\n\n\nIf using bedtools to generate functional annotation matrix\n\n\nto be added", 
            "title": "4. Functional annotation generation"
        }, 
        {
            "location": "/preprocessing/functional_annotation_generation/#functional-annotation-generation", 
            "text": "The generation of functional annotation matrix relies on two types of information (files)   The functional annotation bed files  The chromosome and position information of each SNP from GWAS summary data file", 
            "title": "Functional annotation generation"
        }, 
        {
            "location": "/preprocessing/functional_annotation_generation/#if-using-paintor-script-to-generate-functional-annotation-matrix", 
            "text": "Header  Option  Note      chr  required     pos  required       Note   Make sure that the functional annotation bed file are sorted, because the AnnotateLocus.py script used a specific algorithm and unsorted functional annotation bed file will lead to wrong function annotation matrix.  Make sure that the chromosome nomenclature is the same in the GWAS file and the functional annotation bed file. e.g. both should be chr1 or both should be 1", 
            "title": "If using PAINTOR script to generate functional annotation matrix"
        }, 
        {
            "location": "/preprocessing/functional_annotation_generation/#example-code", 
            "text": "Note  This should not be used directly since it applies to specific files       python AnnotateLocus.py\n    --input annotation_paths_list\n    --locus gwas_summary_3_4750808.processed\n    --out gwas_summary_3_4750808.processed.annotations\n    --chr chr\n    --pos pos", 
            "title": "Example code"
        }, 
        {
            "location": "/preprocessing/functional_annotation_generation/#if-using-bedtools-to-generate-functional-annotation-matrix", 
            "text": "to be added", 
            "title": "If using bedtools to generate functional annotation matrix"
        }, 
        {
            "location": "/software_running/", 
            "text": "Software running\n\n\n\n\nAs abovementioned, after preprocessing, running fine-mapping software is usually straightforward and you are recommended to look through each software's documentation  \n\n\nPAINTOR\n\n\n\n\nExample code\n\n\npaintor -input input_loci_list\n-in input_dir\n-out output_dir\n-Zhead Zscore\n-LDname ld\n-enumerate 1\n-annotations annotation1,annotation2,annotation3\n\n\n\nfgwas\n\n\n\n\n\n\nNote\n\n\nfgwas does NOT allow SNPs to have the same position and it will raise an error. Make sure SNPs have unique position before using fgwas\n\n\n\n\nExample code\n\n\nfgwas -i input_file\n-fine\n-print\n-w annotation1+annotation2\n-o outputfile\n\n\n\nCAVIAR\n\n\n\n\nCAVIARBF", 
            "title": "Software Running"
        }, 
        {
            "location": "/software_running/#software-running", 
            "text": "As abovementioned, after preprocessing, running fine-mapping software is usually straightforward and you are recommended to look through each software's documentation", 
            "title": "Software running"
        }, 
        {
            "location": "/software_running/#paintor", 
            "text": "", 
            "title": "PAINTOR"
        }, 
        {
            "location": "/software_running/#example-code", 
            "text": "paintor -input input_loci_list\n-in input_dir\n-out output_dir\n-Zhead Zscore\n-LDname ld\n-enumerate 1\n-annotations annotation1,annotation2,annotation3", 
            "title": "Example code"
        }, 
        {
            "location": "/software_running/#fgwas", 
            "text": "Note  fgwas does NOT allow SNPs to have the same position and it will raise an error. Make sure SNPs have unique position before using fgwas", 
            "title": "fgwas"
        }, 
        {
            "location": "/software_running/#example-code_1", 
            "text": "fgwas -i input_file\n-fine\n-print\n-w annotation1+annotation2\n-o outputfile", 
            "title": "Example code"
        }, 
        {
            "location": "/software_running/#caviar", 
            "text": "", 
            "title": "CAVIAR"
        }, 
        {
            "location": "/software_running/#caviarbf", 
            "text": "", 
            "title": "CAVIARBF"
        }, 
        {
            "location": "/caviarbf_manual/", 
            "text": "caviarbf\n\n\nR version\n\n\nSince the documentation of caviarbf is not clear enough and sometimes mixes the documentation of the C++ version and the R version this documentation serves as a supplement\n\n\nDependencies\n\n\nThe R version depends on \nRcpp\n, \nRcppEigen\n and \nglmnet\n, remember to install these package before installing caviarbf \n\n\nSoftware Detail\n\n\nUsage\n\n\ncaviarbfFineMapping(lociListFile, maxCausal, nSample, priorType01 = 0, priorValue = c(0.1, 0.2, 0.4), exact = T, eps = 0, useIdentityMatrix = F, BFFileListFile = NA, priorProb = 0, fittingMethod = \"glmnetLASSOMin\", hyperParamSelection = \"cv\", nFold = 5, K = 10, rThreshold = 0.2, pvalueThreshold = 0.05, lambda = c(2^seq(from = -15, by = 2, to = 5), 100, 1000, 10000, 1e+05, 1e+06), alpha = c(0, 0.2, 0.3, 0.5, 0.7, 0.8, 1), annotationIndices = -1, annotationSuffix = \".annotations\", LDSuffix = \".LD\", outputPrefix, keepBF = F, overwriteExistingResults = F, maxIter = 50, deltaLik = 0.01, useParallel = F, ncores = 1, verbose = F)\n\n\nArgument\n\n\nlociListFile: A file listing all the z score files.\n\n\nmaxCausal: The assumed maximal number of causal variants in each locus\n\n\nnSample: The number of individuals used to calculate summary statistics\n\n\npriorType01: 0 to specify sigmaa. An experimental 1 is used to specify the proportion of the phenotype variance explained (pve)\n\n\npriorValue: If priorType01 is 0, it specifies the value of sigmaa. Otherwise, it is the pve value. For sigmaa, a vector of values can be used and the final Bayes factors are averaged. For GWAS fine mapping, c(0.1, 0.2, 0.4) might be a good option. For eQTL, c(0.1, 0.2, 0.4, 0.8, 1.6) might be a good option to accout for large eQTL effects.\n\n\nexact: Whether to calculate the exact Bayes factors. This is only valid for quantitative traits. For binary traits, only approximated Bayes factors are available\n\n\neps: The small value to add to the correlation matrix. This is useful when the LD matrix is from a reference panel\n\n\nuseIdentityMatrix: If true, use the identity matrix as the LD matrix. This improves the computing speed when only considering one causal variant for each locus\n\n\nBFFileListFile: Specify the files of precomputed Bayes factors corresponding to each locus in the lociListFile. If NA, the Bayes factors will be calculated first. Bayes factors can precomputed for each locus using the C++ program This has the advantage of running in parallel, and can saved for later fine mapping.\n\n\npriorProb: The initial probability of each variant being causal. If it is 0, the initial probability will be the number of loci divided by the number of all variants\n\n\nfittingMethod: Specify different penalization models: glmnetLASSOMin for L1 penalization, glmnetRidgeMin for L2 penalization, glmnetENETMin for elastic net penalization. This is only used when hyperParamSelection is \"cv\".\n\n\nhyperParamSelection: Method to select hyperparameter lambda and alpha. \"cv\" for loci based cross validation to select lambda and alpha, \"aic\", \"bic\", \"bic2\" uses AIC, BIC models. For the BIC model, \"bic2\" use the number of SNPs as the number of data points, \"bic\" uses the number of individuals as the number of data points, but they often show similar results. \"topK\" produces the top significant and relative independent annotations. No penalization is used in the fitting. As a by-product, it also outputs the pvalues for each individual annotation when considered separately\n\n\nnFold: The fold of cross validation, only used when hyperParamSelection is \"cv\". If the number of loci is less than then nFold, the number of loci is used\n\n\nK: Specify the top K annotations to select, used for \"topK\"\n\n\nrThreshold: Specify the upper bound of the correlation among top annotations, used for \"topK\"\n\n\npvalueThreshold: Specify the p value threshold for top annotations, used for \"topK\"\n\n\nlambda: The lambda values for parameter selection. If lambda is 0, then no penalization is used in the fitting. This can be used for statistical testing, e.g., comparing two nested annotation models.\n\n\nalpha: The alpha values for parameter selection, only used when the fitting method is glmnetENETMin\n\n\nannotationIndices: A vector to specify annotations. If it is -1, use all annotations, 0 for only the intercept, otherwise it specifies the corresponding columns of annotations. Default uses all annotations.\n\n\nannotationSuffix: The annotation suffix, default \".annotations\"\n\n\nLDSuffix: The correlation file suffix, default \".LD\"\n\n\noutputPrefix: The prefix of the output files\n\n\nkeepBF: Whether to keep produced Bayes factor files\n\n\noverwriteExistingResults: Whether to overwrite existing output files\n\n\nmaxIter: The maximal iteration in the EM method\n\n\ndeltaLik: The minimum improvement of log likelihood to continue the EM iteration\n\n\nuseParallel: Whether to use library parallel to use multiple cores This can increase the speed of calculate PIPs in the EM iteration\n\n\nncores: Number of cores to use in parallel when useParallel is T\n\n\nverbose: If true, more information are printed\n\n\nvalue\n\n\nThe results are saved in several files.\n\n\noutputPrefix\n.marginal\nsaves the indices of all variants following the order in the list file and the their PIPs sorted in a descring order.\n\n\noutputPrefix\n.marginalz\nincludes the extra region index, the variant ID and the z score.\n\n\noutputPrefix\n.loglik\nstores the relative log likelihood.\n\n\noutputPrefix\n.gamma\nstores the estimated annotation effect size and the effect size of standardized annotation.\n\n\noutputPrefix\n.log\nstores the running log.\n\n\noutputPrefix\n.time\nsaves the running time.", 
            "title": "Caviarbf Manual"
        }, 
        {
            "location": "/caviarbf_manual/#caviarbf", 
            "text": "", 
            "title": "caviarbf"
        }, 
        {
            "location": "/caviarbf_manual/#r-version", 
            "text": "Since the documentation of caviarbf is not clear enough and sometimes mixes the documentation of the C++ version and the R version this documentation serves as a supplement", 
            "title": "R version"
        }, 
        {
            "location": "/caviarbf_manual/#dependencies", 
            "text": "The R version depends on  Rcpp ,  RcppEigen  and  glmnet , remember to install these package before installing caviarbf", 
            "title": "Dependencies"
        }, 
        {
            "location": "/caviarbf_manual/#software-detail", 
            "text": "", 
            "title": "Software Detail"
        }, 
        {
            "location": "/caviarbf_manual/#usage", 
            "text": "caviarbfFineMapping(lociListFile, maxCausal, nSample, priorType01 = 0, priorValue = c(0.1, 0.2, 0.4), exact = T, eps = 0, useIdentityMatrix = F, BFFileListFile = NA, priorProb = 0, fittingMethod = \"glmnetLASSOMin\", hyperParamSelection = \"cv\", nFold = 5, K = 10, rThreshold = 0.2, pvalueThreshold = 0.05, lambda = c(2^seq(from = -15, by = 2, to = 5), 100, 1000, 10000, 1e+05, 1e+06), alpha = c(0, 0.2, 0.3, 0.5, 0.7, 0.8, 1), annotationIndices = -1, annotationSuffix = \".annotations\", LDSuffix = \".LD\", outputPrefix, keepBF = F, overwriteExistingResults = F, maxIter = 50, deltaLik = 0.01, useParallel = F, ncores = 1, verbose = F)", 
            "title": "Usage"
        }, 
        {
            "location": "/caviarbf_manual/#argument", 
            "text": "lociListFile: A file listing all the z score files.  maxCausal: The assumed maximal number of causal variants in each locus  nSample: The number of individuals used to calculate summary statistics  priorType01: 0 to specify sigmaa. An experimental 1 is used to specify the proportion of the phenotype variance explained (pve)  priorValue: If priorType01 is 0, it specifies the value of sigmaa. Otherwise, it is the pve value. For sigmaa, a vector of values can be used and the final Bayes factors are averaged. For GWAS fine mapping, c(0.1, 0.2, 0.4) might be a good option. For eQTL, c(0.1, 0.2, 0.4, 0.8, 1.6) might be a good option to accout for large eQTL effects.  exact: Whether to calculate the exact Bayes factors. This is only valid for quantitative traits. For binary traits, only approximated Bayes factors are available  eps: The small value to add to the correlation matrix. This is useful when the LD matrix is from a reference panel  useIdentityMatrix: If true, use the identity matrix as the LD matrix. This improves the computing speed when only considering one causal variant for each locus  BFFileListFile: Specify the files of precomputed Bayes factors corresponding to each locus in the lociListFile. If NA, the Bayes factors will be calculated first. Bayes factors can precomputed for each locus using the C++ program This has the advantage of running in parallel, and can saved for later fine mapping.  priorProb: The initial probability of each variant being causal. If it is 0, the initial probability will be the number of loci divided by the number of all variants  fittingMethod: Specify different penalization models: glmnetLASSOMin for L1 penalization, glmnetRidgeMin for L2 penalization, glmnetENETMin for elastic net penalization. This is only used when hyperParamSelection is \"cv\".  hyperParamSelection: Method to select hyperparameter lambda and alpha. \"cv\" for loci based cross validation to select lambda and alpha, \"aic\", \"bic\", \"bic2\" uses AIC, BIC models. For the BIC model, \"bic2\" use the number of SNPs as the number of data points, \"bic\" uses the number of individuals as the number of data points, but they often show similar results. \"topK\" produces the top significant and relative independent annotations. No penalization is used in the fitting. As a by-product, it also outputs the pvalues for each individual annotation when considered separately  nFold: The fold of cross validation, only used when hyperParamSelection is \"cv\". If the number of loci is less than then nFold, the number of loci is used  K: Specify the top K annotations to select, used for \"topK\"  rThreshold: Specify the upper bound of the correlation among top annotations, used for \"topK\"  pvalueThreshold: Specify the p value threshold for top annotations, used for \"topK\"  lambda: The lambda values for parameter selection. If lambda is 0, then no penalization is used in the fitting. This can be used for statistical testing, e.g., comparing two nested annotation models.  alpha: The alpha values for parameter selection, only used when the fitting method is glmnetENETMin  annotationIndices: A vector to specify annotations. If it is -1, use all annotations, 0 for only the intercept, otherwise it specifies the corresponding columns of annotations. Default uses all annotations.  annotationSuffix: The annotation suffix, default \".annotations\"  LDSuffix: The correlation file suffix, default \".LD\"  outputPrefix: The prefix of the output files  keepBF: Whether to keep produced Bayes factor files  overwriteExistingResults: Whether to overwrite existing output files  maxIter: The maximal iteration in the EM method  deltaLik: The minimum improvement of log likelihood to continue the EM iteration  useParallel: Whether to use library parallel to use multiple cores This can increase the speed of calculate PIPs in the EM iteration  ncores: Number of cores to use in parallel when useParallel is T  verbose: If true, more information are printed", 
            "title": "Argument"
        }, 
        {
            "location": "/caviarbf_manual/#value", 
            "text": "The results are saved in several files. outputPrefix .marginal\nsaves the indices of all variants following the order in the list file and the their PIPs sorted in a descring order. outputPrefix .marginalz\nincludes the extra region index, the variant ID and the z score. outputPrefix .loglik\nstores the relative log likelihood. outputPrefix .gamma\nstores the estimated annotation effect size and the effect size of standardized annotation. outputPrefix .log\nstores the running log. outputPrefix .time\nsaves the running time.", 
            "title": "value"
        }, 
        {
            "location": "/reference/", 
            "text": "Reference\n\n\n\n\nApproximately independent linkage disequilibrium blocks in human populations\n\n\nPaper: \nPickrell et al. Bioinformatics. 2016\n\nWebsite: \nhttps://bitbucket.org/nygcresearch/ldetect-data/src\n\n\nPAINTOR\n\n\nPaper: \nKichaev et al. PLOS Genetics, 2014\n, \nKichaev et al. American Journal of Human Genetics, 2015\n, \nKichaev et al. Bioinformatics, 2016\n\nWebsite: \nhttps://github.com/gkichaev/PAINTOR_V3.0\n\n\nfgwas\n\n\nPaper: \nPickrell American Journal of Human Genetics, 2014\n\nWebsite: \nhttps://github.com/joepickrell/fgwas\n\n\nCAVIAR\n\n\nPaper: \nHormozdiari et al. Genetics, 2014\n\nWebsite: \nhttp://genetics.cs.ucla.edu/caviar/\n\n\nCAVIARBF\n\n\nPaper: \nChen et al. Genetics, 2015\n\nWebsite: \nhttps://bitbucket.org/Wenan/caviarbf", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/#approximately-independent-linkage-disequilibrium-blocks-in-human-populations", 
            "text": "Paper:  Pickrell et al. Bioinformatics. 2016 \nWebsite:  https://bitbucket.org/nygcresearch/ldetect-data/src", 
            "title": "Approximately independent linkage disequilibrium blocks in human populations"
        }, 
        {
            "location": "/reference/#paintor", 
            "text": "Paper:  Kichaev et al. PLOS Genetics, 2014 ,  Kichaev et al. American Journal of Human Genetics, 2015 ,  Kichaev et al. Bioinformatics, 2016 \nWebsite:  https://github.com/gkichaev/PAINTOR_V3.0", 
            "title": "PAINTOR"
        }, 
        {
            "location": "/reference/#fgwas", 
            "text": "Paper:  Pickrell American Journal of Human Genetics, 2014 \nWebsite:  https://github.com/joepickrell/fgwas", 
            "title": "fgwas"
        }, 
        {
            "location": "/reference/#caviar", 
            "text": "Paper:  Hormozdiari et al. Genetics, 2014 \nWebsite:  http://genetics.cs.ucla.edu/caviar/", 
            "title": "CAVIAR"
        }, 
        {
            "location": "/reference/#caviarbf", 
            "text": "Paper:  Chen et al. Genetics, 2015 \nWebsite:  https://bitbucket.org/Wenan/caviarbf", 
            "title": "CAVIARBF"
        }
    ]
}